{"version":3,"sources":["images/3a.png","history.js","components/Navbar.jsx","components/WelcomePopup.jsx","styles/snapStyles.js","components/SnapPreview.jsx","components/Map.jsx","components/Toolbar.jsx","components/Search.jsx","components/Filter.jsx","components/NewSnap.jsx","components/Signup.jsx","components/Login.jsx","components/Profile.jsx","components/SnapDetail.jsx","components/Footer.jsx","components/SnapEdit.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","Navbar","logout","axios","get","then","response","props","setUser","catch","err","console","log","Fragment","className","to","src","logo","alt","name","this","dropdown","user","onClick","Component","WelcomePopup","categoryColor","category","creation","color","fromMiliseconds","Date","getTime","timeDifference","now","colorNumber","SnapPreview","state","snap","message","getData","snapId","id","setState","data","currentTime","snapTime","created_at","timeDiff","hours","parseInt","minutes","prevProps","style","backgroundColor","image","title","_id","MAPBOX_TOKEN","process","Map","viewport","latitude","longitude","zoom","popupInfo","_onViewportChange","getSnaps","snaps","snapsData","length","map","location","lat","lng","creationDate","renderPopup","closePopup","closeWindows","history","push","width","height","mapStyle","onViewportChange","mapboxApiAccessToken","positionOptions","enableHighAccuracy","trackUserLocation","showCompass","key","snapImage","snapTitle","snapCreated","anchor","dynamicPosition","closeButton","closeOnClick","Toolbar","Search","search","htmlFor","type","Filter","filters","handleChange","event","index","indexOf","target","value","splice","onChange","goToMap","filterSnaps","Geocode","setApiKey","NewSnap","page","description","loading","address","goNext","classList","add","document","getElementById","remove","componentDidMount","navigator","geolocation","getCurrentPosition","coords","fromLatLng","results","formatted_address","goBack","assignCategory","buttons","getElementsByClassName","handleSubmit","preventDefault","fromAddress","post","geometry","refresh","uploadImage","e","files","FormData","append","fetch","method","body","res","json","responseData","secure_url","display","placeholder","ref","fileInput","click","onSubmit","snapError","Signup","username","password","autoComplete","Login","Profile","snapData","score","snapList","getAttribute","parentNode","delete","SnapDetail","match","params","Footer","SnapEdit","img","patch","updateLocation","App","setDropdown","userObj","array","filtered","filter","exact","path","component","render","snapsdata","React","Boolean","window","hostname","ReactDOM","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.425368c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3a.834d966c.png\";","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../images/3a.png\";\n\nclass Navbar extends Component {\n  logout = () => {\n    axios\n      .get(\"/auth/logout\")\n      .then(response => {\n        this.props.setUser(null);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"navbar\">\n          <Link className=\"navbarHome\" to=\"/home\">\n            <img className=\"logo\" src={logo} alt=\"OiSnap-logo\" />\n          </Link>\n\n          <button>\n            <i name=\"user\" className=\"fas fa-user\"></i>\n          </button>\n\n          {this.props.dropdown && !this.props.user && (\n            <div className=\"dropdown\">\n              <Link to=\"/login\">Login</Link>\n              <Link to=\"/signup\">Signup</Link>\n            </div>\n          )}\n          {this.props.dropdown && this.props.user && (\n            <div className=\"dropdown\">\n              <Link to=\"/profile\">Profile</Link>\n              <Link to=\"/home\" onClick={this.logout}>\n                Logout\n              </Link>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/3a.png\";\n\nconst WelcomePopup = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"welcomePopup container-content\">\n        <img className=\"logo\" src={logo} />\n\n        <p>\n          OiSnap is a social platform that allows users around Berlin to share\n          their best tips of the moment based on location. Share a picutre of a\n          couch up for grabs on the street, the line to Berghain or an awesome\n          street artist – all snaps disappear after 24 hours.\n        </p>\n        <button className=\"button-visible\">\n          <Link className=\"link\" to=\"/home\">\n            Explore\n          </Link>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomePopup;\n","const categoryColor = (category, creation) => {\n  if (!category) return {};\n  let color = \"\";\n\n  let maxTime = 86400000; // This number is 24 hours in ms\n  let fromMiliseconds = new Date().getTime();\n\n  if (creation) {\n    fromMiliseconds = new Date(creation).getTime();\n  }\n\n  let startMiliseconds = Date.now();\n\n  let timeDifference = startMiliseconds - fromMiliseconds;\n  if (timeDifference <= 0) timeDifference = 1;\n\n  let colorNumber = (timeDifference / maxTime) * 100; // A number from 0-100\n\n  switch (category) {\n    case \"promo\":\n      color = `rgb(255, ${colorNumber + 50}, ${colorNumber + 50})`;\n      break;\n    case \"happening\":\n      color = `rgb(${colorNumber + 100}, ${colorNumber + 100}, ${colorNumber +\n        100})`;\n      break;\n    case \"crowd\":\n      color = `rgb(255, 255, ${colorNumber})`;\n      break;\n    case \"free\":\n      color = `rgb(${colorNumber}, ${colorNumber + 204}, ${colorNumber})`;\n      break;\n\n    default:\n      color = `rgb(242, 242, 242)`;\n  }\n\n  return color;\n};\n\nexport default categoryColor;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport categoryColor from \"../styles/snapStyles\";\n\nclass SnapPreview extends Component {\n  state = {\n    snap: null,\n    message: null\n  };\n\n  getData = () => {\n    const snapId = this.props.id;\n    axios\n      .get(`/snaps/${snapId}`)\n      .then(response => {\n        this.setState({\n          snap: response.data\n        });\n      })\n      .catch(err => {\n        this.setState({\n          message: err\n        });\n      });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.id !== this.props.id) {\n      this.getData();\n    }\n    // console.log(\"hiiiii\", snapId);\n  }\n  componentDidMount() {\n    this.getData();\n  }\n\n  getTime = snap => {\n    const currentTime = new Date();\n    const snapTime = new Date(snap.created_at);\n\n    let timeDiff = currentTime.getTime() - snapTime.getTime();\n\n    let hours = parseInt(timeDiff / (1000 * 3600));\n    let minutes = parseInt(timeDiff / (1000 * 60));\n\n    if (hours > 1) {\n      return hours + \" hours \";\n    } else if (hours === 1) {\n      return hours + \" hour \";\n    } else if (minutes === 1) {\n      return minutes + \" minute \";\n    } else {\n      return minutes + \" minutes \";\n    }\n  };\n\n  render() {\n    const snap = this.state.snap;\n\n    if (!snap) {\n      return <div>LOADING</div>;\n    } else {\n      return (\n        <div className=\"preview\">\n          <div className=\"snap-box\">\n            <div\n              className=\"preview-time-box\"\n              style={{\n                backgroundColor: categoryColor(\n                  this.state.snap.category,\n                  this.state.snap.created_at\n                )\n              }}\n            >\n              <p className=\"time\">Created {this.getTime(snap)} ago</p>\n            </div>\n            <div className=\"container-content\">\n              <img\n                className=\"snap-img-preview\"\n                src={snap.image}\n                alt={snap.title}\n              />\n              <div className=\"details-box\">\n                <h3>{snap.title}</h3>\n                <Link className=\"see-more\" to={`/snaps/${snap._id}`}>\n                  View more\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default SnapPreview;\n","import React, { Component } from \"react\";\nimport MapGL, {\n  GeolocateControl,\n  Marker,\n  Popup,\n  NavigationControl\n} from \"react-map-gl\";\nimport SnapPreview from \"./SnapPreview.jsx\";\n\nimport history from \"../history\";\nimport categoryColor from \"../styles/snapStyles.js\";\n\nconst MAPBOX_TOKEN = `${process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}`;\n\n// const geolocateStyle = {\n//   position: \"absolute\",\n//   top: 0,\n//   left: 0,\n//   margin: 10\n// };\n\nexport default class Map extends Component {\n  state = {\n    viewport: {\n      latitude: 52.520007,\n      longitude: 13.404954,\n      zoom: 12\n    },\n    popupInfo: null\n  };\n\n  _onViewportChange = viewport => this.setState({ viewport });\n\n  getSnaps = () => {\n    let snaps = [];\n    if (this.props.snapsData.length !== 0) {\n      snaps = this.props.snapsData.map(snap => {\n        return {\n          _id: snap._id,\n          latitude: snap.location.lat,\n          longitude: snap.location.lng,\n          category: snap.category,\n          creationDate: snap.created_at\n        };\n      });\n    }\n\n    return snaps;\n  };\n\n  renderPopup = snap => {\n    this.setState({\n      popupInfo: snap\n    });\n  };\n\n  closePopup = () => {\n    this.setState({\n      popupInfo: null\n    });\n  };\n\n  closeWindows = () => {\n    history.push(\"/home\");\n    this.setState({\n      popupInfo: null\n    });\n  };\n\n  render() {\n    const { viewport } = this.state;\n\n    // const geolocateStyle = {\n    //   // float: \"left\",\n    //   // marginTop: \"100px\",\n    //   // padding: \"10px\"\n    // };\n\n    return (\n      <MapGL\n        {...viewport}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        onViewportChange={this._onViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        className=\"mapContainer\"\n        onClick={this.closeWindows}\n      >\n        <div className=\"map-controls\">\n          <div className=\"geolocation-button\">\n            <GeolocateControl\n              // style={geolocateStyle}\n              className=\"map-geolocateStyle\"\n              positionOptions={{ enableHighAccuracy: true }}\n              trackUserLocation={true}\n              onViewportChange={viewport => {\n                this.setState({ viewport: { ...viewport, zoom: 16 } });\n              }}\n            />\n          </div>\n\n          <div>\n            <NavigationControl showCompass={false} />\n          </div>\n        </div>\n        {this.getSnaps().map(snap => {\n          return (\n            <Marker\n              key={snap._id}\n              latitude={snap.latitude}\n              longitude={snap.longitude}\n              snapImage={snap.image}\n              snapTitle={snap.title}\n              snapCreated={snap.created_at}\n            >\n              <span\n                style={{\n                  color: categoryColor(snap.category, snap.creationDate)\n                }}\n              >\n                <i\n                  className=\"fas fa-map-marker-alt\"\n                  onClick={() => this.renderPopup(snap)}\n                ></i>\n              </span>\n            </Marker>\n          );\n        })}\n        {this.state.popupInfo !== null ? (\n          <Popup\n            anchor=\"bottom-left\"\n            latitude={this.state.popupInfo.latitude}\n            longitude={this.state.popupInfo.longitude}\n            dynamicPosition={true}\n            closeButton={false}\n            closeOnClick={true}\n            style={{\n              backgroundColor: `${categoryColor(\n                this.state.popupInfo.category,\n                this.state.popupInfo.created_at\n              )}`\n            }}\n          >\n            <div onClick={this.closePopup}>\n              <SnapPreview id={this.state.popupInfo._id} />\n            </div>\n          </Popup>\n        ) : null}\n      </MapGL>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Toolbar extends Component {\n  render() {\n    return (\n      <div className=\"toolbar\">\n        <Link to=\"/filter\">Filter</Link>\n        <Link to=\"/add\">\n          <div className=\"addSnap\">\n            <i className=\"fas fa-camera\"></i>\n          </div>\n        </Link>\n\n        {/* <Link to=\"/search\" >\n          Search\n        </Link> */}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from \"react\";\n\nclass Search extends Component {\n  state = {\n    search: \"\"\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div>\n          {/* form */}\n          <label htmlFor=\"search\">Search location:</label>\n          <input type=\"text\" />\n          <button>Go</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport history from \"../history\";\n\nclass Filter extends Component {\n  state = {\n    filters: []\n  };\n\n  handleChange = event => {\n    let index = this.state.filters.indexOf(event.target.value);\n    if (index === -1) {\n      this.setState({\n        filters: [...this.state.filters, event.target.value]\n      });\n    } else {\n      this.state.filters.splice(index, 1);\n      this.setState({\n        filters: this.state.filters\n      });\n    }\n  };\n\n  goToMap() {\n    history.push(\"/home\");\n  }\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <div>\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"\"\n              name=\"free\"\n              value=\"free\"\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"free\"> FREE </label>\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"\"\n              name=\"happening\"\n              value=\"happening\"\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"happening\"> HAPPENING </label>\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"\"\n              name=\"crowd\"\n              value=\"crowd\"\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"crowd\"> CROWD </label>\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"\"\n              name=\"promo\"\n              value=\"promo\"\n              onChange={this.handleChange}\n            />\n            <label htmlFor=\"promo\"> PROMO </label>\n          </div>\n        </div>\n        <div>\n          <button\n            onClick={() => {\n              this.goToMap();\n              this.props.filterSnaps(this.state.filters);\n            }}\n          >\n            GO\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Geocode from \"react-geocode\";\nimport categoryColor from \"../styles/snapStyles\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_API);\n\nclass NewSnap extends Component {\n  state = {\n    page: 1,\n    category: null,\n    message: \"\",\n    location: \"\",\n    title: \"\",\n    description: \"\",\n    loading: false,\n    image: null,\n    address: \"\"\n  };\n\n  goNext = event => {\n    if (this.state.category && this.state.image) {\n      event.target.classList.add(\"hidden\");\n      document.getElementById(\"back-button\").classList.remove(\"hidden\");\n      this.setState({\n        page: 2,\n        message: \"\"\n      });\n    } else {\n      this.setState({\n        message: \"Photo and category are required.\"\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (!this.props.user) {\n      this.props.history.push(\"/login\");\n    }\n\n    navigator.geolocation.getCurrentPosition(response => {\n      let location = {\n        lat: response.coords.latitude,\n        lng: response.coords.longitude\n      };\n\n      Geocode.fromLatLng(location.lat, location.lng)\n        .then(response => {\n          this.setState({\n            location: location,\n            address: response.results[0].formatted_address\n          });\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  goBack = event => {\n    event.target.classList.add(\"hidden\");\n    document.getElementById(\"next-button\").classList.remove(\"hidden\");\n    this.setState({\n      page: 1\n    });\n  };\n\n  assignCategory = event => {\n    const category = event.target.value;\n    const buttons = document.getElementsByClassName(\"category-button\");\n\n    for (let button of buttons) {\n      button.classList.remove(\"selected-button\");\n    }\n\n    event.target.classList.add(\"selected-button\");\n\n    this.setState({\n      category: category\n    });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.title === \"\" || !this.state.location) {\n      this.setState({\n        message: \"Please give your snap a title and location.\"\n      });\n    } else {\n      Geocode.fromAddress(this.state.address)\n        .then(response => {\n          axios\n            .post(\"/snaps/\", {\n              title: this.state.title,\n              description: this.state.description,\n              category: this.state.category,\n              address: response.results[0].formatted_address,\n              location: response.results[0].geometry.location,\n              image: this.state.image\n            })\n            .then(response => {\n              this.props.refresh();\n              // call update data method from app.js\n              this.props.history.push(`/snaps/${response.data._id}`);\n            })\n            .catch(err => {\n              this.setState({\n                message: \"Something went wrong, please try again.\"\n              });\n            });\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  uploadImage = e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"oisnap\");\n\n    this.setState({\n      loading: true\n    });\n\n    fetch(\"https://api.cloudinary.com/v1_1/oisnap/image/upload\", {\n      method: \"POST\",\n      body: data\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(responseData => {\n        this.setState({\n          image: responseData.secure_url,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          message: \"Couldn't upload the photo, please try again.\"\n        });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div\n            className=\"navigation-items\"\n            style={{ backgroundColor: categoryColor(this.state.category) }}\n          >\n            <div className=\"buttons\">\n              <button\n                className=\"navigation-button hidden\"\n                id=\"back-button\"\n                onClick={this.goBack}\n              >\n                BACK\n              </button>\n              <button\n                id=\"next-button\"\n                className=\"navigation-button\"\n                onClick={this.goNext}\n              >\n                NEXT\n              </button>\n            </div>\n            <p className=\"step-count\">\n              <b> Step {this.state.page} out of 2</b>{\" \"}\n            </p>\n          </div>\n          {/* /* ***PAGE 1 upload and category *** */}\n          {this.state.page === 1 && (\n            <div className=\"test\">\n              <div className=\"container-content page photo-page\">\n                <input\n                  style={{ display: \"none\" }}\n                  type=\"file\"\n                  name=\"file\"\n                  placeholder=\"Upload an image\"\n                  onChange={this.uploadImage}\n                  ref={fileInput => (this.fileInput = fileInput)}\n                />\n                <button\n                  className=\"upload-image\"\n                  onClick={() => this.fileInput.click()}\n                >\n                  <i className=\"fas fa-camera\"></i>\n                </button>\n                {this.state.loading ? (\n                  <h3>Loading </h3>\n                ) : (\n                  <img\n                    className=\"uploaded-img\"\n                    src={this.state.image}\n                    // style={{ height: \"30vh\" }}\n                    alt={this.state.title}\n                  />\n                )}\n                <button\n                  className=\"button-visible category-button\"\n                  onClick={this.assignCategory}\n                  value=\"free\"\n                >\n                  FREE\n                </button>\n                <button\n                  className=\"button-visible category-button\"\n                  onClick={this.assignCategory}\n                  value=\"promo\"\n                >\n                  PROMO\n                </button>\n                <button\n                  className=\"button-visible category-button\"\n                  onClick={this.assignCategory}\n                  value=\"crowd\"\n                >\n                  CROWD\n                </button>\n                <button\n                  className=\"button-visible category-button\"\n                  onClick={this.assignCategory}\n                  value=\"happening\"\n                >\n                  HAPPENING\n                </button>\n                {this.state.message && (\n                  <p className=\"error-message\">{this.state.message}</p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* /* *************  PAGE 2 snap details************* */}\n          {this.state.page === 2 && (\n            <div className=\"container-content\">\n              <div className=\"page detail-page snap-form\">\n                <form onSubmit={this.handleSubmit}>\n                  <label htmlFor=\"title\">Snap title *</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"description\"> Short description</label>\n                  <input\n                    type=\"text\"\n                    name=\"description\"\n                    id=\"description\"\n                    value={this.state.description}\n                    onChange={this.handleChange}\n                  />\n                  <label htmlFor=\"address\"> Location </label>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    id=\"address\"\n                    value={this.state.address}\n                    onChange={this.handleChange}\n                  />\n\n                  <button\n                    className=\"button-visible submit-button\"\n                    type=\"submit\"\n                  >\n                    Add to\n                  </button>\n                </form>\n\n                {this.state.snapError && (\n                  <p className=\"error-message\">{this.state.snapError}</p>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewSnap;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/auth/signup\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        this.props.setUser(response.data);\n        this.props.history.push(\"/home\");\n      })\n      .catch(err => {\n        this.setState({\n          message: err.response.data.message\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"detail-page\">\n          <form>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              autoComplete=\"username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n\n            {this.state.message && <p>{this.state.message}</p>}\n\n            <button type=\"submit\" onClick={this.handleSubmit}>\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: null\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      .post(\"/auth/login\", {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        this.props.setUser(response.data);\n        this.props.history.push(\"/home\");\n      })\n      .catch(err => {\n        this.setState({\n          message: \"Incorrect credentials, please try again\"\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"detail-page\">\n          <form>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              autoComplete=\"username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n\n            <button type=\"submit\" onClick={this.handleSubmit}>\n              Log in\n            </button>\n          </form>\n          {this.state.message ? <p>{this.state.message}</p> : <p></p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class Profile extends Component {\n  state = { snapData: [], score: null };\n\n  getData = () => {\n    axios\n      .get(`/snaps?user=${this.props.user._id}`)\n      .then(response => {\n        console.log(\"response.score :\", response.data.score);\n        this.setState({\n          snapData: response.data.snapList,\n          score: response.data.score\n        });\n      })\n      .catch(err => console.log(err));\n  };\n  componentDidMount = () => {\n    if (!this.props.user) {\n      this.props.history.push(\"/login\");\n    }\n    this.getData();\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (event.target.getAttribute(\"name\") === \"edit\") {\n      this.props.history.push(\n        `/snaps/${event.target.parentNode.parentNode.parentNode.getAttribute(\n          \"id\"\n        )}/edit`\n      );\n    } else if (event.target.getAttribute(\"name\") === \"delete\") {\n      axios\n        .delete(\n          `/snaps/${event.target.parentNode.parentNode.parentNode.getAttribute(\n            \"id\"\n          )}`\n        )\n        .then(response => {\n          console.log(response);\n          this.props.refresh();\n          this.getData();\n        })\n        .catch(err => {});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"user-info\">\n          <h3>{this.props.user.username}'s Profile</h3>\n          <p>\n            Snap score: <i>{this.state.score}</i>\n          </p>\n        </div>\n\n        <h4>Your current snaps</h4>\n        <div className=\"container-content\">\n          <div className=\"user-snaps\">\n            {this.state.snapData?.map(snap => {\n              return (\n                <div className=\"user-snap\" id={snap._id} key={snap._id}>\n                  <div className=\"snap-info\">\n                    <img\n                      className=\"snap-img-preview\"\n                      src={snap.image}\n                      alt={snap.title}\n                    />\n\n                    <Link to={`/snaps/${snap._id}`}>{snap.title}</Link>\n                  </div>\n                  <div className=\"snap-edit\">\n                    <button onClick={this.handleSubmit}>\n                      <i name=\"edit\" className=\"fas fa-pen\"></i>\n                    </button>\n                    <button onClick={this.handleSubmit}>\n                      <i name=\"delete\" className=\"fas fa-trash-alt\"></i>\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n            {this.state.snapData.length === 0 && (\n              <p>\n                Nothing here yet... <br /> Time to{\" \"}\n                <Link to=\"/add\">post a snap!</Link>{\" \"}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport categoryColor from \"../styles/snapStyles\";\n\nclass SnapDetail extends Component {\n  state = {\n    snap: null,\n    message: null\n  };\n\n  componentDidMount() {\n    const snapId = this.props.match.params.id;\n\n    axios\n      .get(`/snaps/${snapId}`)\n      .then(response => {\n        this.setState({\n          snap: response.data\n        });\n      })\n      .catch(err => {\n        this.setState({\n          message: err\n        });\n      });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (event.target.getAttribute(\"name\") === \"edit\") {\n      this.props.history.push(`/snaps/${this.props.match.params.id}/edit`);\n    } else if (event.target.getAttribute(\"name\") === \"delete\") {\n      axios\n        .delete(`/snaps/${this.props.match.params.id}`)\n        .then(response => {\n          this.props.refresh();\n          this.props.history.push(\"/home\");\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  getTime = snap => {\n    const currentTime = new Date();\n    const snapTime = new Date(snap.created_at);\n\n    let timeDiff = currentTime.getTime() - snapTime.getTime();\n\n    let hours = parseInt(timeDiff / (1000 * 3600));\n    let minutes = parseInt(timeDiff / (1000 * 60));\n\n    if (hours > 1) {\n      return hours + \" hours \";\n    } else if (hours === 1) {\n      return hours + \" hour \";\n    } else if (minutes === 1) {\n      return minutes + \" minute \";\n    } else {\n      return minutes + \" minutes \";\n    }\n  };\n\n  render() {\n    const snap = this.state.snap;\n\n    if (!snap) {\n      return <div>LOADING</div>;\n    } else {\n      console.log(this.state.snap.category);\n      console.log(categoryColor(this.state.snap));\n\n      return (\n        <div className=\"container\">\n          <div\n            className=\"time-box\"\n            style={{\n              backgroundColor: categoryColor(\n                this.state.snap.category,\n                this.state.snap.created_at\n              )\n            }}\n          >\n            <p>Created {this.getTime(snap)} ago</p>\n          </div>\n          <div className=\"container-content \">\n            <div className=\"snap-box\">\n              <div>\n                <img className=\"snap-img\" src={snap.image} alt={snap.title} />\n              </div>\n              <div className=\"details-box\">\n                <h2>{snap.title}</h2>\n                {snap.description !== \"\" && <p>{snap.description}</p>}\n                {this.props.user._id === snap.user && (\n                  <div>\n                    <button onClick={this.handleSubmit}>\n                      <i name=\"edit\" className=\"fas fa-pen\"></i>\n                    </button>\n                    <button onClick={this.handleSubmit}>\n                      <i name=\"delete\" className=\"fas fa-trash-alt\"></i>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default SnapDetail;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>Ironhack © Karo Mia Nora</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Geocode from \"react-geocode\";\nimport categoryColor from \"../styles/snapStyles\";\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_API);\n\nexport default class SnapEdit extends Component {\n  state = {\n    user: \"\",\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    category: \"\",\n    img: \"\",\n    creationDate: \"\",\n    address: \"\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(`/snaps/${this.props.match.params.id}`)\n      .then(response => {\n        this.setState({\n          user: response.data.user,\n          title: response.data.title,\n          description: response.data.description,\n          category: response.data.category,\n          img: response.data.image,\n          creationDate: response.created_at,\n          address: response.data.address,\n          location: response.data.location\n        });\n      })\n      .catch(err => {\n        this.setState({\n          message: err\n        });\n      });\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    Geocode.fromAddress(this.state.address)\n      .then(response => {\n        axios\n          .patch(`/snaps/${this.props.match.params.id}`, {\n            ...this.state,\n            address: response.results[0].formatted_address,\n            location: response.results[0].geometry.location\n          })\n          .then(response => {\n            this.props.refresh();\n            this.props.history.push(`/snaps/${this.props.match.params.id}`);\n          })\n          .catch(err => console.log(err.message));\n      })\n      .catch(err => console.log(err));\n  };\n\n  assignCategory = event => {\n    event.preventDefault();\n    this.setState({\n      category: event.target.value\n    });\n  };\n\n  updateLocation = event => {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(response => {\n      let location = {\n        lat: response.coords.latitude,\n        lng: response.coords.longitude\n      };\n\n      Geocode.fromLatLng(location.lat, location.lng)\n        .then(response => {\n          this.setState({\n            location: location,\n            address: response.results[0].formatted_address\n          });\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.props.user._id == this.state.user ? (\n          <React.Fragment>\n            <div\n              className=\"container-header\"\n              style={{\n                backgroundColor: `${categoryColor(\n                  this.state.category,\n                  this.state.creationDate\n                )}`\n              }}\n            >\n              <h3>Edit your Snap</h3>\n            </div>\n            <div className=\"container-content\">\n              <img\n                className=\"snap-img\"\n                src={this.state.img}\n                alt={this.state.title}\n                style={{ height: \"40vh\" }}\n              />\n              <p>\n                <i>You cannot edit the picture once it was posted.</i>\n              </p>\n              {/* className=\"page detail-page\" */}\n              <div>\n                <form>\n                  <label htmlFor=\"title\">Snap title</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                  <br />\n                  <label htmlFor=\"description\"> Short description</label>\n                  <input\n                    type=\"text\"\n                    name=\"description\"\n                    id=\"description\"\n                    value={this.state.description}\n                    onChange={this.handleChange}\n                  />\n\n                  <label htmlFor=\"address\"> Location </label>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    id=\"address\"\n                    value={this.state.address}\n                    onChange={this.handleChange}\n                  />\n                  <button onClick={this.updateLocation}>Update Location</button>\n\n                  <p>Current Category: {this.state.category}</p>\n                  <button onClick={this.assignCategory} value=\"free\">\n                    FREE\n                  </button>\n                  <button onClick={this.assignCategory} value=\"promo\">\n                    PROMO\n                  </button>\n                  <button onClick={this.assignCategory} value=\"crowd\">\n                    CROWD\n                  </button>\n                  <button onClick={this.assignCategory} value=\"happening\">\n                    HAPPENING\n                  </button>\n\n                  <br />\n                  <button onClick={this.handleSubmit}>Save Changes</button>\n                </form>\n              </div>\n            </div>\n          </React.Fragment>\n        ) : (\n          <p>You need to be the owner of the snap to edit it</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport history from \"./history\";\n\nimport Navbar from \"./components/Navbar\";\nimport WelcomePopup from \"./components/WelcomePopup\";\nimport Map from \"./components/Map\";\nimport Toolbar from \"./components/Toolbar\";\nimport Search from \"./components/Search\";\nimport Filter from \"./components/Filter\";\nimport NewSnap from \"./components/NewSnap\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport SnapDetail from \"./components/SnapDetail\";\n\nimport Footer from \"./components/Footer\";\n\nimport SnapPreview from \"./components/SnapPreview\";\nimport SnapEdit from \"./components/SnapEdit\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    data: [],\n    dropdown: false\n  };\n\n  setDropdown = event => {\n    if (event.target.getAttribute(\"name\") === \"user\") {\n      this.setState({\n        dropdown: !this.state.dropdown\n      });\n    } else {\n      this.setState({\n        dropdown: false\n      });\n    }\n  };\n\n  setUser = userObj => {\n    this.setState({ user: userObj });\n  };\n\n  filterSnaps = array => {\n    let filtered = this.state.data.filter(snap => {\n      for (let category of array) {\n        if (snap.category === category) {\n          return snap;\n        }\n      }\n    });\n    this.setState({\n      data: filtered\n    });\n  };\n\n  getData = () => {\n    axios\n      .get(\"/snaps\")\n      .then(response => {\n        this.setState({\n          data: response.data.snapList\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" onClick={this.setDropdown}>\n        <Router history={history}>\n          <div className=\"map\">\n            <Map snapsData={this.state.data} />\n          </div>\n          <div className=\"body\">\n            <Navbar\n              user={this.state.user}\n              setUser={this.setUser}\n              dropdown={this.state.dropdown}\n            />\n            <div className=\"body-view\">\n              <Switch>\n                <Route exact path=\"/search\" component={Search} />\n                <Route\n                  exact\n                  path=\"/filter\"\n                  render={props => (\n                    <Filter\n                      filterSnaps={this.filterSnaps}\n                      history={props.history}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/add\"\n                  render={props => (\n                    <NewSnap\n                      user={this.state.user}\n                      refresh={this.getData}\n                      history={props.history}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={props => (\n                    <Signup\n                      setUser={this.setUser}\n                      history={props.history}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={props => (\n                    <Login\n                      setUser={this.setUser}\n                      history={props.history}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/profile\"\n                  render={props => (\n                    <Profile\n                      user={this.state.user}\n                      history={props.history}\n                      refresh={this.getData}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/snaps/:id/edit\"\n                  render={props => (\n                    <SnapEdit\n                      user={this.state.user}\n                      {...props}\n                      refresh={this.getData}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n                <Route\n                  path=\"/snaps/:id\"\n                  render={props => (\n                    <SnapDetail\n                      {...props}\n                      user={this.state.user}\n                      refresh={this.getData}\n                      setDropdown={this.setDropdown}\n                    />\n                  )}\n                />\n\n                <Route\n                  path=\"/snaps/:id/preview\"\n                  render={props => (\n                    <SnapPreview {...props} user={this.state.user} />\n                  )}\n                />\n\n                <Route exact path=\"/\" component={WelcomePopup} />\n              </Switch>\n            </div>\n            <Switch>\n              <Route exact path=\"/\" component={Footer} />\n              <Toolbar snapsdata={this.state.data} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Geocode from \"react-geocode\";\n\n// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\nGeocode.setApiKey(\"AIzaSyBh2aAsK418Q4BEEbtSafeh353MvH-EjsQ\");\n\naxios.get(\"/auth/loggedin\").then(response => {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={response.data} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}